{
  "openapi": "3.0.0",
  "info": {
    "title": "IMDB Top 1000 movies api",
    "version": "1.0",
    "description": "This API contains the top 1000 IMDB rated movies"
  },
  "servers": [{
      "url": "/api/v1.0/"
  }],
  "paths": {
    "/movie": {
      "get": {
        "summary": "Get all movies from the database",
        "description": "Get the a list with selected information items of all the movies stored in the database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#components/schemas/movieResponseBody"
            }
          }
        }
      },
      "post": {
        "summary": "Add a new movie to the database",
        "description": "Post data about a new movie to be stored in the database",
        "requestBody": {
          "description": "A movie request object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                  "$ref": "#/components/schemas/movieRequestBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/components/schemas/movieObject"
            }
          }
        }
      }
    },
    "/movie/{movieId}": {
      "get": {
        "summary": "Get a movie with a given id",
        "description": "This returns a movie object with the given movie id",
        "parameters": [{
          "name": "movieId",
          "in": "path",
          "required": true,
          "description": "ID of the movie that we want to retrieve",
          "schema": {
            "$ref": "#components/schemas/movieId"
          }
      }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/movieObject"
                }
              }
            }
          },
           "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/errorObject"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Change a movie with a given id",
        "description": "This is the long description",
        "parameters": [{
          "name": "movieId",
          "in": "path",
          "required": true,
          "description": "ID of the book that we want to match",
          "schema": {
            "$ref": "#components/schemas/movieId"
          }
      }],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/bookObject"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json":{
                "schema": {
                  "$ref": "#components/schemas/errorObject"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a movie with a given id",
        "description": "Retrieve a movie object by id and delete it",
        "parameters": [{
          "name": "movieId",
          "in": "path",
          "required": true,
          "description": "ID of the movie we want to retieve",
          "schema": {
            "$ref": "#components/schemas/movieId"
          }
      }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/movieObject"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json":{
                "schema": {
                  "$ref": "#components/schemas/errorObject"
                }
              }
            }
          }
        }
      }
    }
      }
    }
  },
  "components": {
    "schemas": {
      "id": {
         "properties":{
           "id": {
             "type": "string",
             "description": "Id of a given book"
           }
         }

      },
      "movieObject": {
        "type": "object",
        "description": "A movie object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the movie"
          },
          "title": {
            "type": "string",
            "description": "The title of the book"
          },
          "author": {
            "type": "string",
            "description": "The author of the book"
          },
          "description": {
            "type": "string",
            "description": "A description of the book"
          }
        }
      },
      "movieResponseBody": {
        "type": "array",
        "description": "An array of movieObjects"

      },
      "movieRequestBody": {
        "type": "object",
        "description": "A movie object without an id",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the book"
          },
          "author": {
            "type": "string",
            "description": "The author of the book"
          },
          "description": {
            "type": "string",
            "description": "A description of the book"
          }
        }
      },
      "errorObject": {
        "type": "object",
        "description": "An object describing an error",
        "properties": {
          "error": {
            "type": "string",
            "description": "The reason for the described"
          }
        }
      }
    }
  }
}